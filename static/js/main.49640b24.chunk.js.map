{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","itemIndex","handleSwipe","step","props","images","frameSize","infinity","totalImages","length","lastIndex","Math","min","max","setState","this","itemWidth","animationDuration","prevDisabled","nextDisabled","className","style","width","transition","map","img","index","transform","src","alt","type","onClick","disabled","Component","App","setWidth","event","target","value","setFrameSize","setStep","setAnimationDuration","setInfinity","checked","htmlFor","id","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49640b24.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinity: boolean,\n};\n\ntype State = {\n  itemIndex: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    itemIndex: 0,\n  };\n\n  handleSwipe = (step: number) => () => {\n    const { images, frameSize, infinity } = this.props;\n    let { itemIndex } = this.state;\n    const totalImages = images.length;\n    const lastIndex = Math.min(totalImages - frameSize, totalImages - step);\n\n    if (infinity) {\n      if (itemIndex === lastIndex && itemIndex + step > lastIndex) {\n        itemIndex = 0;\n      } else if (itemIndex === 0 && itemIndex + step < 1) {\n        itemIndex = lastIndex;\n      } else if (itemIndex + step > lastIndex) {\n        itemIndex = lastIndex;\n      } else if (itemIndex + step < 1) {\n        itemIndex = 0;\n      } else {\n        itemIndex += step;\n      }\n    } else {\n      itemIndex = Math.min(Math.max(itemIndex + step, 0), lastIndex);\n    }\n\n    this.setState({ itemIndex });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      itemWidth,\n      frameSize,\n      infinity,\n      animationDuration,\n    } = this.props;\n\n    const { itemIndex } = this.state;\n    const prevDisabled = (itemIndex <= 0) && !infinity;\n    const nextDisabled = (itemIndex >= images.length - frameSize) && !infinity;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, index) => (\n            <li\n              key={img}\n              className=\"Carusel__item\"\n              style={{\n                transition: `${animationDuration}ms`,\n                transform: `translateX(${-itemIndex * itemWidth}px)`,\n              }}\n            >\n              <img src={img} alt={`${index + 1}`} width={itemWidth} />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handleSwipe(-step)}\n            disabled={prevDisabled}\n          >\n            &#8656;\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            data-cy=\"next\"\n            disabled={nextDisabled}\n            onClick={this.handleSwipe(step)}\n          >\n            &#8658;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinity: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinity: false,\n  };\n\n  setWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n  };\n\n  setInfinity = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinity: event.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinity,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          Carousel\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinity={infinity}\n        />\n        <label\n          htmlFor=\"itemId\"\n          className=\"label\"\n        >\n          Item Width:\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            value={itemWidth}\n            min={130}\n            max={260}\n            step={10}\n            onChange={this.setWidth}\n          />\n        </label>\n        <label\n          htmlFor=\"frameId\"\n          className=\"label\"\n        >\n          Frame Size:\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setFrameSize}\n          />\n        </label>\n        <label\n          htmlFor=\"stepId\"\n          className=\"label\"\n        >\n          Step:\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            value={step}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={this.setStep}\n          />\n        </label>\n        <label\n          htmlFor=\"animationId\"\n          className=\"label\"\n        >\n          AnimationDuration:\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            value={animationDuration}\n            min={500}\n            max={5000}\n            step={500}\n            onChange={this.setAnimationDuration}\n          />\n        </label>\n        <label\n          htmlFor=\"infinityId\"\n          className=\"label\"\n        >\n          Infinite:\n          <input\n            type=\"checkbox\"\n            id=\"infinityId\"\n            onChange={this.setInfinity}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}